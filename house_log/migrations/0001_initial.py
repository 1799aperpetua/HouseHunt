# Generated by Django 4.1.5 on 2023-02-20 23:43

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Friend_Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=400, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=100)),
                ('web_address', models.CharField(max_length=1000)),
                ('type_of_home', models.IntegerField(blank=True, choices=[(1, 'House'), (2, 'Apartment')], null=True)),
                ('price', models.IntegerField()),
                ('sq_footage', models.IntegerField(blank=True, null=True)),
                ('beds', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('bathrooms', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)])),
                ('dog_permission', models.IntegerField(blank=True, choices=[(1, 'yes'), (2, 'no'), (3, 'maybe')], null=True)),
                ('neighborhood', models.IntegerField(blank=True, choices=[(1, 'Point Breeze'), (2, 'Newbold'), (3, 'Passyunk Square'), (4, 'Graduate Hospital'), (5, 'Hawthorne'), (6, 'Bella Vista'), (7, 'Queen Village'), (8, 'University City'), (9, 'Fitler Square'), (10, 'Rittenhouse Square'), (11, 'Washington Square'), (12, 'Society Hill'), (13, 'Old City'), (14, 'Chinatown'), (15, 'West Passyunk'), (16, 'CentralSouth Philly'), (17, 'Fairmount'), (18, 'Grays Ferry')], null=True)),
                ('park_bool', models.BooleanField(blank=True, null=True)),
                ('park_name', models.CharField(blank=True, max_length=100, null=True)),
                ('park_walk_dist', models.IntegerField(blank=True, null=True)),
                ('room_notes', models.CharField(blank=True, max_length=1000, null=True)),
                ('bathroom_notes', models.CharField(blank=True, max_length=1000, null=True)),
                ('kitchen_notes', models.CharField(blank=True, max_length=1000, null=True)),
                ('outdoor_bool', models.BooleanField(blank=True, null=True)),
                ('outdoor_name', models.CharField(max_length=100)),
                ('outdoor_notes', models.CharField(blank=True, max_length=1000, null=True)),
                ('storage_bool', models.BooleanField(blank=True, null=True)),
                ('storage_space_notes', models.CharField(blank=True, max_length=1000, null=True)),
                ('dog_notes', models.CharField(blank=True, max_length=1000, null=True)),
                ('parking_notes', models.CharField(blank=True, max_length=1000, null=True)),
                ('small_park_distance_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('big_park_distance_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('food_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('errand_stores_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('shopping_score', models.IntegerField(blank=True, null=True)),
                ('nightlife_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('sports_complex_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('distance_to_friends_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('date_available', models.DateField(blank=True, null=True)),
                ('next_steps', models.CharField(blank=True, max_length=1000, null=True)),
                ('applied_status', models.BooleanField(blank=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_address', models.CharField(blank=True, max_length=1000, null=True)),
                ('gym_address', models.CharField(blank=True, max_length=1000, null=True)),
                ('friend_addresses', models.ManyToManyField(to='house_log.friend_address')),
                ('houses', models.ManyToManyField(blank=True, to='house_log.house')),
                ('user', models.OneToOneField(max_length=10, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='User_Commute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_commute_work', models.IntegerField(blank=True, null=True)),
                ('bus_commute_work', models.IntegerField(blank=True, null=True)),
                ('walk_commute_work', models.IntegerField(blank=True, null=True)),
                ('car_commute_gym', models.IntegerField(blank=True, null=True)),
                ('bus_commute_gym', models.IntegerField(blank=True, null=True)),
                ('walk_commute_gym', models.IntegerField(blank=True, null=True)),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='house_log.house')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='house_log.profile')),
            ],
        ),
    ]
